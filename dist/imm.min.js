!function(r,n){"function"==typeof define&&define.amd?define(["Immutable"],function(t){return r.imm=n(t)}):"object"==typeof exports?module.exports=n(require("Immutable")):r.imm=n(r.Immutable)}(this,function(r){function n(r,t,e){function o(e){return n(r,t,e)}function u(n,t){{var e=r.Map(n);r.Map(t)}return e.mergeDeep(t).toJS()}function i(r){return f(r[t])}function f(r){return e.findIndex(function(n){return n[t]==r})}function c(r){return e.find(function(n){return n[t]==r})}function a(r){var n,t=i(r);return n=t>-1?e.splice(t,1,r):e.concat([r]),o(n)}function d(r){var n=i(r);if(-1==n)return a(r);throw new Error("Record already exists")}function m(r){var n=i(r);if(-1==n)throw new Error("Record does not exists");return a(r)}function s(r){if(!r[t])throw new Error("Record must have an id");var n=i(r);if(-1==n)throw new Error("Record not found");var f=e.get(n),c=u(f,r),a=e.splice(n,1,c);return o(a)}function v(r){var n=i(r);if(-1==n)throw new Error("Record not found");var t=e.splice(n,1);return o(t)}function l(r){var n=e.map(r);return o(n)}function p(r){var n=e.filter(r);return o(n)}function w(r){var n=e.sort(r);return o(n)}function b(){return e}var t=t||"id";return{isImm:!0,count:e.count.bind(e),get:c,set:a,add:d,replace:m,update:s,remove:v,find:e.find.bind(e),map:l,filter:p,sort:w,toJS:e.toJS.bind(e),toImmutable:b}}function t(r,t,o){if(!e(t))throw new Error("You must provide an array");var u=r.Sequence(t).valueSeq();return n(r,o,u)}var e=Array.isArray||function(r){return"[object Array]"===toString.call(r)};return t.bind(null,r)});